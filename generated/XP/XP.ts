// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MetaTransactionExecuted extends ethereum.Event {
  get params(): MetaTransactionExecuted__Params {
    return new MetaTransactionExecuted__Params(this);
  }
}

export class MetaTransactionExecuted__Params {
  _event: MetaTransactionExecuted;

  constructor(event: MetaTransactionExecuted) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get relayerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get functionSignature(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class NewActions extends ethereum.Event {
  get params(): NewActions__Params {
    return new NewActions__Params(this);
  }
}

export class NewActions__Params {
  _event: NewActions;

  constructor(event: NewActions) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get actions(): Array<NewActionsActionsStruct> {
    return this._event.parameters[1].value.toTupleArray<
      NewActionsActionsStruct
    >();
  }
}

export class NewActionsActionsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get points(): BigInt {
    return this[1].toBigInt();
  }

  get direction(): i32 {
    return this[2].toI32();
  }

  get isValid(): boolean {
    return this[3].toBoolean();
  }
}

export class NewScoreTypes extends ethereum.Event {
  get params(): NewScoreTypes__Params {
    return new NewScoreTypes__Params(this);
  }
}

export class NewScoreTypes__Params {
  _event: NewScoreTypes;

  constructor(event: NewScoreTypes) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get scoreTypesAdded(): Array<string> {
    return this._event.parameters[1].value.toStringArray();
  }

  get allScoreTypes(): Array<string> {
    return this._event.parameters[2].value.toStringArray();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProjectCreated extends ethereum.Event {
  get params(): ProjectCreated__Params {
    return new ProjectCreated__Params(this);
  }
}

export class ProjectCreated__Params {
  _event: ProjectCreated;

  constructor(event: ProjectCreated) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get actions(): Array<ProjectCreatedActionsStruct> {
    return this._event.parameters[3].value.toTupleArray<
      ProjectCreatedActionsStruct
    >();
  }

  get _scoreTypes(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }

  get owners(): Array<Address> {
    return this._event.parameters[5].value.toAddressArray();
  }

  get updaters(): Array<Address> {
    return this._event.parameters[6].value.toAddressArray();
  }
}

export class ProjectCreatedActionsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get points(): BigInt {
    return this[1].toBigInt();
  }

  get direction(): i32 {
    return this[2].toI32();
  }

  get isValid(): boolean {
    return this[3].toBoolean();
  }
}

export class ProjectOwnerAdded extends ethereum.Event {
  get params(): ProjectOwnerAdded__Params {
    return new ProjectOwnerAdded__Params(this);
  }
}

export class ProjectOwnerAdded__Params {
  _event: ProjectOwnerAdded;

  constructor(event: ProjectOwnerAdded) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProjectOwnerRemoved extends ethereum.Event {
  get params(): ProjectOwnerRemoved__Params {
    return new ProjectOwnerRemoved__Params(this);
  }
}

export class ProjectOwnerRemoved__Params {
  _event: ProjectOwnerRemoved;

  constructor(event: ProjectOwnerRemoved) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get ownerRemoved(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProjectUpdaterAdded extends ethereum.Event {
  get params(): ProjectUpdaterAdded__Params {
    return new ProjectUpdaterAdded__Params(this);
  }
}

export class ProjectUpdaterAdded__Params {
  _event: ProjectUpdaterAdded;

  constructor(event: ProjectUpdaterAdded) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get newUpdater(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProjectUpdaterRemoved extends ethereum.Event {
  get params(): ProjectUpdaterRemoved__Params {
    return new ProjectUpdaterRemoved__Params(this);
  }
}

export class ProjectUpdaterRemoved__Params {
  _event: ProjectUpdaterRemoved;

  constructor(event: ProjectUpdaterRemoved) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get updaterRemoved(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RemoveScoreType extends ethereum.Event {
  get params(): RemoveScoreType__Params {
    return new RemoveScoreType__Params(this);
  }
}

export class RemoveScoreType__Params {
  _event: RemoveScoreType;

  constructor(event: RemoveScoreType) {
    this._event = event;
  }

  get projectId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get scoreTypeRemoved(): string {
    return this._event.parameters[1].value.toString();
  }

  get allScoreTypes(): Array<string> {
    return this._event.parameters[2].value.toStringArray();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateScore extends ethereum.Event {
  get params(): UpdateScore__Params {
    return new UpdateScore__Params(this);
  }
}

export class UpdateScore__Params {
  _event: UpdateScore;

  constructor(event: UpdateScore) {
    this._event = event;
  }

  get updateId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get projectId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get targetAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get newPoints(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get pointChange(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get direction(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get actionName(): string {
    return this._event.parameters[6].value.toString();
  }

  get scoreType(): string {
    return this._event.parameters[7].value.toString();
  }

  get scoreTypes(): Array<string> {
    return this._event.parameters[8].value.toStringArray();
  }
}

export class UpdateScoreFailed extends ethereum.Event {
  get params(): UpdateScoreFailed__Params {
    return new UpdateScoreFailed__Params(this);
  }
}

export class UpdateScoreFailed__Params {
  _event: UpdateScoreFailed;

  constructor(event: UpdateScoreFailed) {
    this._event = event;
  }

  get updateId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get projectId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get targetAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class XP__getActionsFromProjectIdResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get points(): BigInt {
    return this[1].toBigInt();
  }

  get direction(): i32 {
    return this[2].toI32();
  }

  get isValid(): boolean {
    return this[3].toBoolean();
  }
}

export class XP__idToProjectResult {
  value0: Bytes;
  value1: string;
  value2: i32;

  constructor(value0: Bytes, value1: string, value2: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    return map;
  }

  getId(): Bytes {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getStatus(): i32 {
    return this.value2;
  }
}

export class XP extends ethereum.SmartContract {
  static bind(address: Address): XP {
    return new XP("XP", address);
  }

  admins(param0: BigInt): Address {
    let result = super.call("admins", "admins(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_admins(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("admins", "admins(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getActionsFromProjectId(
    _projectId: Bytes
  ): Array<XP__getActionsFromProjectIdResultValue0Struct> {
    let result = super.call(
      "getActionsFromProjectId",
      "getActionsFromProjectId(bytes32):((string,uint256,uint8,bool)[])",
      [ethereum.Value.fromFixedBytes(_projectId)]
    );

    return result[0].toTupleArray<
      XP__getActionsFromProjectIdResultValue0Struct
    >();
  }

  try_getActionsFromProjectId(
    _projectId: Bytes
  ): ethereum.CallResult<Array<XP__getActionsFromProjectIdResultValue0Struct>> {
    let result = super.tryCall(
      "getActionsFromProjectId",
      "getActionsFromProjectId(bytes32):((string,uint256,uint8,bool)[])",
      [ethereum.Value.fromFixedBytes(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<XP__getActionsFromProjectIdResultValue0Struct>()
    );
  }

  getChainID(): BigInt {
    let result = super.call("getChainID", "getChainID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getChainID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getChainID", "getChainID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNonce(user: Address): BigInt {
    let result = super.call("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_getNonce(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOwnersFromProjectId(_projectId: Bytes): Array<Address> {
    let result = super.call(
      "getOwnersFromProjectId",
      "getOwnersFromProjectId(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(_projectId)]
    );

    return result[0].toAddressArray();
  }

  try_getOwnersFromProjectId(
    _projectId: Bytes
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getOwnersFromProjectId",
      "getOwnersFromProjectId(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getScore(
    _projectId: Bytes,
    _scoreType: string,
    _targetWallet: Address
  ): BigInt {
    let result = super.call(
      "getScore",
      "getScore(bytes32,string,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_projectId),
        ethereum.Value.fromString(_scoreType),
        ethereum.Value.fromAddress(_targetWallet)
      ]
    );

    return result[0].toBigInt();
  }

  try_getScore(
    _projectId: Bytes,
    _scoreType: string,
    _targetWallet: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getScore",
      "getScore(bytes32,string,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_projectId),
        ethereum.Value.fromString(_scoreType),
        ethereum.Value.fromAddress(_targetWallet)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getScoreTypesFromProject(_projectId: Bytes): Array<string> {
    let result = super.call(
      "getScoreTypesFromProject",
      "getScoreTypesFromProject(bytes32):(string[])",
      [ethereum.Value.fromFixedBytes(_projectId)]
    );

    return result[0].toStringArray();
  }

  try_getScoreTypesFromProject(
    _projectId: Bytes
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getScoreTypesFromProject",
      "getScoreTypesFromProject(bytes32):(string[])",
      [ethereum.Value.fromFixedBytes(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  getUpdatersFromProjectId(_projectId: Bytes): Array<Address> {
    let result = super.call(
      "getUpdatersFromProjectId",
      "getUpdatersFromProjectId(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(_projectId)]
    );

    return result[0].toAddressArray();
  }

  try_getUpdatersFromProjectId(
    _projectId: Bytes
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getUpdatersFromProjectId",
      "getUpdatersFromProjectId(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  idToProject(param0: Bytes): XP__idToProjectResult {
    let result = super.call(
      "idToProject",
      "idToProject(bytes32):(bytes32,string,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new XP__idToProjectResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toI32()
    );
  }

  try_idToProject(param0: Bytes): ethereum.CallResult<XP__idToProjectResult> {
    let result = super.tryCall(
      "idToProject",
      "idToProject(bytes32):(bytes32,string,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new XP__idToProjectResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toI32()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  verify(
    owner: Address,
    nonce: BigInt,
    chainID: BigInt,
    functionSignature: Bytes,
    sigR: Bytes,
    sigS: Bytes,
    sigV: i32
  ): boolean {
    let result = super.call(
      "verify",
      "verify(address,uint256,uint256,bytes,bytes32,bytes32,uint8):(bool)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(nonce),
        ethereum.Value.fromUnsignedBigInt(chainID),
        ethereum.Value.fromBytes(functionSignature),
        ethereum.Value.fromFixedBytes(sigR),
        ethereum.Value.fromFixedBytes(sigS),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(sigV))
      ]
    );

    return result[0].toBoolean();
  }

  try_verify(
    owner: Address,
    nonce: BigInt,
    chainID: BigInt,
    functionSignature: Bytes,
    sigR: Bytes,
    sigS: Bytes,
    sigV: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verify",
      "verify(address,uint256,uint256,bytes,bytes32,bytes32,uint8):(bool)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(nonce),
        ethereum.Value.fromUnsignedBigInt(chainID),
        ethereum.Value.fromBytes(functionSignature),
        ethereum.Value.fromFixedBytes(sigR),
        ethereum.Value.fromFixedBytes(sigS),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(sigV))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddActionsCall extends ethereum.Call {
  get inputs(): AddActionsCall__Inputs {
    return new AddActionsCall__Inputs(this);
  }

  get outputs(): AddActionsCall__Outputs {
    return new AddActionsCall__Outputs(this);
  }
}

export class AddActionsCall__Inputs {
  _call: AddActionsCall;

  constructor(call: AddActionsCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _inputActions(): Array<AddActionsCall_inputActionsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      AddActionsCall_inputActionsStruct
    >();
  }
}

export class AddActionsCall__Outputs {
  _call: AddActionsCall;

  constructor(call: AddActionsCall) {
    this._call = call;
  }
}

export class AddActionsCall_inputActionsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get points(): BigInt {
    return this[1].toBigInt();
  }

  get direction(): i32 {
    return this[2].toI32();
  }

  get isValid(): boolean {
    return this[3].toBoolean();
  }
}

export class AddAdminCall extends ethereum.Call {
  get inputs(): AddAdminCall__Inputs {
    return new AddAdminCall__Inputs(this);
  }

  get outputs(): AddAdminCall__Outputs {
    return new AddAdminCall__Outputs(this);
  }
}

export class AddAdminCall__Inputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }

  get _newAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAdminCall__Outputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }
}

export class AddProjectOwnerCall extends ethereum.Call {
  get inputs(): AddProjectOwnerCall__Inputs {
    return new AddProjectOwnerCall__Inputs(this);
  }

  get outputs(): AddProjectOwnerCall__Outputs {
    return new AddProjectOwnerCall__Outputs(this);
  }
}

export class AddProjectOwnerCall__Inputs {
  _call: AddProjectOwnerCall;

  constructor(call: AddProjectOwnerCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddProjectOwnerCall__Outputs {
  _call: AddProjectOwnerCall;

  constructor(call: AddProjectOwnerCall) {
    this._call = call;
  }
}

export class AddProjectUpdaterCall extends ethereum.Call {
  get inputs(): AddProjectUpdaterCall__Inputs {
    return new AddProjectUpdaterCall__Inputs(this);
  }

  get outputs(): AddProjectUpdaterCall__Outputs {
    return new AddProjectUpdaterCall__Outputs(this);
  }
}

export class AddProjectUpdaterCall__Inputs {
  _call: AddProjectUpdaterCall;

  constructor(call: AddProjectUpdaterCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _newUpdater(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddProjectUpdaterCall__Outputs {
  _call: AddProjectUpdaterCall;

  constructor(call: AddProjectUpdaterCall) {
    this._call = call;
  }
}

export class AddScoreTypesCall extends ethereum.Call {
  get inputs(): AddScoreTypesCall__Inputs {
    return new AddScoreTypesCall__Inputs(this);
  }

  get outputs(): AddScoreTypesCall__Outputs {
    return new AddScoreTypesCall__Outputs(this);
  }
}

export class AddScoreTypesCall__Inputs {
  _call: AddScoreTypesCall;

  constructor(call: AddScoreTypesCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _scoreTypes(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class AddScoreTypesCall__Outputs {
  _call: AddScoreTypesCall;

  constructor(call: AddScoreTypesCall) {
    this._call = call;
  }
}

export class CreateProjectCall extends ethereum.Call {
  get inputs(): CreateProjectCall__Inputs {
    return new CreateProjectCall__Inputs(this);
  }

  get outputs(): CreateProjectCall__Outputs {
    return new CreateProjectCall__Outputs(this);
  }
}

export class CreateProjectCall__Inputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _inputActions(): Array<CreateProjectCall_inputActionsStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      CreateProjectCall_inputActionsStruct
    >();
  }

  get _scoreTypes(): Array<string> {
    return this._call.inputValues[3].value.toStringArray();
  }

  get _owners(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get _updaters(): Array<Address> {
    return this._call.inputValues[5].value.toAddressArray();
  }
}

export class CreateProjectCall__Outputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }
}

export class CreateProjectCall_inputActionsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get points(): BigInt {
    return this[1].toBigInt();
  }

  get direction(): i32 {
    return this[2].toI32();
  }

  get isValid(): boolean {
    return this[3].toBoolean();
  }
}

export class ExecuteMetaTransactionCall extends ethereum.Call {
  get inputs(): ExecuteMetaTransactionCall__Inputs {
    return new ExecuteMetaTransactionCall__Inputs(this);
  }

  get outputs(): ExecuteMetaTransactionCall__Outputs {
    return new ExecuteMetaTransactionCall__Outputs(this);
  }
}

export class ExecuteMetaTransactionCall__Inputs {
  _call: ExecuteMetaTransactionCall;

  constructor(call: ExecuteMetaTransactionCall) {
    this._call = call;
  }

  get userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get functionSignature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get sigR(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get sigS(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get sigV(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class ExecuteMetaTransactionCall__Outputs {
  _call: ExecuteMetaTransactionCall;

  constructor(call: ExecuteMetaTransactionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseProjectCall extends ethereum.Call {
  get inputs(): PauseProjectCall__Inputs {
    return new PauseProjectCall__Inputs(this);
  }

  get outputs(): PauseProjectCall__Outputs {
    return new PauseProjectCall__Outputs(this);
  }
}

export class PauseProjectCall__Inputs {
  _call: PauseProjectCall;

  constructor(call: PauseProjectCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PauseProjectCall__Outputs {
  _call: PauseProjectCall;

  constructor(call: PauseProjectCall) {
    this._call = call;
  }
}

export class RemoveAdminCall extends ethereum.Call {
  get inputs(): RemoveAdminCall__Inputs {
    return new RemoveAdminCall__Inputs(this);
  }

  get outputs(): RemoveAdminCall__Outputs {
    return new RemoveAdminCall__Outputs(this);
  }
}

export class RemoveAdminCall__Inputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }

  get _removeAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAdminCall__Outputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }
}

export class RemoveProjectOwnerCall extends ethereum.Call {
  get inputs(): RemoveProjectOwnerCall__Inputs {
    return new RemoveProjectOwnerCall__Inputs(this);
  }

  get outputs(): RemoveProjectOwnerCall__Outputs {
    return new RemoveProjectOwnerCall__Outputs(this);
  }
}

export class RemoveProjectOwnerCall__Inputs {
  _call: RemoveProjectOwnerCall;

  constructor(call: RemoveProjectOwnerCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveProjectOwnerCall__Outputs {
  _call: RemoveProjectOwnerCall;

  constructor(call: RemoveProjectOwnerCall) {
    this._call = call;
  }
}

export class RemoveProjectUpdaterCall extends ethereum.Call {
  get inputs(): RemoveProjectUpdaterCall__Inputs {
    return new RemoveProjectUpdaterCall__Inputs(this);
  }

  get outputs(): RemoveProjectUpdaterCall__Outputs {
    return new RemoveProjectUpdaterCall__Outputs(this);
  }
}

export class RemoveProjectUpdaterCall__Inputs {
  _call: RemoveProjectUpdaterCall;

  constructor(call: RemoveProjectUpdaterCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _updater(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveProjectUpdaterCall__Outputs {
  _call: RemoveProjectUpdaterCall;

  constructor(call: RemoveProjectUpdaterCall) {
    this._call = call;
  }
}

export class RemoveScoreTypeCall extends ethereum.Call {
  get inputs(): RemoveScoreTypeCall__Inputs {
    return new RemoveScoreTypeCall__Inputs(this);
  }

  get outputs(): RemoveScoreTypeCall__Outputs {
    return new RemoveScoreTypeCall__Outputs(this);
  }
}

export class RemoveScoreTypeCall__Inputs {
  _call: RemoveScoreTypeCall;

  constructor(call: RemoveScoreTypeCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _scoreType(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RemoveScoreTypeCall__Outputs {
  _call: RemoveScoreTypeCall;

  constructor(call: RemoveScoreTypeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ResumeProjectCall extends ethereum.Call {
  get inputs(): ResumeProjectCall__Inputs {
    return new ResumeProjectCall__Inputs(this);
  }

  get outputs(): ResumeProjectCall__Outputs {
    return new ResumeProjectCall__Outputs(this);
  }
}

export class ResumeProjectCall__Inputs {
  _call: ResumeProjectCall;

  constructor(call: ResumeProjectCall) {
    this._call = call;
  }

  get _projectId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ResumeProjectCall__Outputs {
  _call: ResumeProjectCall;

  constructor(call: ResumeProjectCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateScoreCall extends ethereum.Call {
  get inputs(): UpdateScoreCall__Inputs {
    return new UpdateScoreCall__Inputs(this);
  }

  get outputs(): UpdateScoreCall__Outputs {
    return new UpdateScoreCall__Outputs(this);
  }
}

export class UpdateScoreCall__Inputs {
  _call: UpdateScoreCall;

  constructor(call: UpdateScoreCall) {
    this._call = call;
  }

  get _updateId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _projectId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _actionName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _scoreType(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _targetWallet(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class UpdateScoreCall__Outputs {
  _call: UpdateScoreCall;

  constructor(call: UpdateScoreCall) {
    this._call = call;
  }
}
